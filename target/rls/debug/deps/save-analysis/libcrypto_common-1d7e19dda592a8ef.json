{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5","program":"/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crypto_common","--edition=2018","/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=1d7e19dda592a8ef","-C","extra-filename=-1d7e19dda592a8ef","--out-dir","/home/amir/NFT/target/rls/debug/deps","-L","dependency=/home/amir/NFT/target/rls/debug/deps","--extern","generic_array=/home/amir/NFT/target/rls/debug/deps/libgeneric_array-3461042ac24cc513.rmeta","--extern","typenum=/home/amir/NFT/target/rls/debug/deps/libtypenum-d5d797e647ec61d1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/amir/NFT/target/rls/debug/deps/libcrypto_common-1d7e19dda592a8ef.rmeta"},"prelude":{"crate_id":{"name":"crypto_common","disambiguator":[17236447084734099826,0]},"crate_root":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src","external_crates":[{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":20,"id":{"name":"generic_array","disambiguator":[5117534517313398275,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","num":21,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}}],"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":0,"byte_end":8851,"line_start":1,"line_end":299,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":448,"byte_end":461,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":486,"byte_end":493,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"typenum","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":0,"byte_end":8851,"line_start":1,"line_end":299,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":75},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":80},{"krate":0,"index":82}],"decl_id":null,"docs":" Common cryptographic traits.\n","sig":null,"attributes":[{"value":"/ Common cryptographic traits.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"no_std","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":34,"byte_end":44,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":281,"byte_end":304,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":305,"byte_end":345,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":714,"byte_end":719,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"GenericArray<u8, <B as BlockSizeUser>::BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Block on which [`BlockSizeUser`] implementors operate.\n","sig":null,"attributes":[{"value":"/ Block on which [`BlockSizeUser`] implementors operate.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":646,"byte_end":704,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":838,"byte_end":844,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"name":"Output","qualname":"::Output","value":"GenericArray<u8, <T as OutputSizeUser>::OutputSize>","parent":null,"children":[],"decl_id":null,"docs":" Output array of [`OutputSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Output array of [`OutputSizeUser`] implementors.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":776,"byte_end":828,"line_start":28,"line_end":28,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":958,"byte_end":961,"line_start":31,"line_end":31,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <B as KeySizeUser>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key used by [`KeySizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Key used by [`KeySizeUser`] implementors.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":903,"byte_end":948,"line_start":30,"line_end":30,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1094,"byte_end":1096,"line_start":33,"line_end":33,"column_start":10,"column_end":12},"name":"Iv","qualname":"::Iv","value":"GenericArray<u8, <B as IvSizeUser>::IvSize>","parent":null,"children":[],"decl_id":null,"docs":" Initialization vector (nonce) used by [`IvSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Initialization vector (nonce) used by [`IvSizeUser`] implementors.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1014,"byte_end":1084,"line_start":32,"line_end":32,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1198,"byte_end":1211,"line_start":36,"line_end":36,"column_start":11,"column_end":24},"name":"BlockSizeUser","qualname":"::BlockSizeUser","value":"BlockSizeUser","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Types which process data in blocks.\n","sig":null,"attributes":[{"value":"/ Types which process data in blocks.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1148,"byte_end":1187,"line_start":35,"line_end":35,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1259,"byte_end":1268,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockSizeUser::BlockSize","value":"type BlockSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Size of the block in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the block in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1218,"byte_end":1249,"line_start":37,"line_end":37,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1341,"byte_end":1351,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"block_size","qualname":"::BlockSizeUser::block_size","value":"pub fn block_size() -> usize","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Return block size in bytes.\n","sig":null,"attributes":[{"value":"/ Return block size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1302,"byte_end":1333,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1636,"byte_end":1650,"line_start":55,"line_end":55,"column_start":11,"column_end":25},"name":"OutputSizeUser","qualname":"::OutputSizeUser","value":"OutputSizeUser","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Types which return data with the given size.\n","sig":null,"attributes":[{"value":"/ Types which return data with the given size.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1577,"byte_end":1625,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1699,"byte_end":1709,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::OutputSizeUser::OutputSize","value":"type OutputSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Size of the output in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the output in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1657,"byte_end":1689,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1783,"byte_end":1794,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"output_size","qualname":"::OutputSizeUser::output_size","value":"pub fn output_size() -> usize","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Return output size in bytes.\n","sig":null,"attributes":[{"value":"/ Return output size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1743,"byte_end":1775,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1976,"byte_end":1987,"line_start":68,"line_end":68,"column_start":11,"column_end":22},"name":"KeySizeUser","qualname":"::KeySizeUser","value":"KeySizeUser","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Types which use key for initialization.","sig":null,"attributes":[{"value":"/ Types which use key for initialization.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1849,"byte_end":1892,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1893,"byte_end":1896,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyInit`] or [`KeyIvInit`].","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1897,"byte_end":1965,"line_start":67,"line_end":67,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2026,"byte_end":2033,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::KeySizeUser::KeySize","value":"type KeySize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Key size in bytes.\n","sig":null,"attributes":[{"value":"/ Key size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":1994,"byte_end":2016,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2104,"byte_end":2112,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"key_size","qualname":"::KeySizeUser::key_size","value":"pub fn key_size() -> usize","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return key size in bytes.\n","sig":null,"attributes":[{"value":"/ Return key size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2067,"byte_end":2096,"line_start":72,"line_end":72,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2321,"byte_end":2331,"line_start":81,"line_end":81,"column_start":11,"column_end":21},"name":"IvSizeUser","qualname":"::IvSizeUser","value":"IvSizeUser","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Types which use initialization vector (nonce) for initialization.","sig":null,"attributes":[{"value":"/ Types which use initialization vector (nonce) for initialization.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2164,"byte_end":2233,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyIvInit`] or [`InnerIvInit`].","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2238,"byte_end":2310,"line_start":80,"line_end":80,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2388,"byte_end":2394,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"name":"IvSize","qualname":"::IvSizeUser::IvSize","value":"type IvSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Initialization vector size in bytes.\n","sig":null,"attributes":[{"value":"/ Initialization vector size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2338,"byte_end":2378,"line_start":82,"line_end":82,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2464,"byte_end":2471,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"iv_size","qualname":"::IvSizeUser::iv_size","value":"pub fn iv_size() -> usize","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Return IV size in bytes.\n","sig":null,"attributes":[{"value":"/ Return IV size in bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2428,"byte_end":2456,"line_start":85,"line_end":85,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2662,"byte_end":2671,"line_start":94,"line_end":94,"column_start":11,"column_end":20},"name":"InnerUser","qualname":"::InnerUser","value":"InnerUser","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Types which use another type for initialization.","sig":null,"attributes":[{"value":"/ Types which use another type for initialization.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2522,"byte_end":2574,"line_start":91,"line_end":91,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2575,"byte_end":2578,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`InnerInit`] or [`InnerIvInit`].","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2579,"byte_end":2651,"line_start":93,"line_end":93,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2703,"byte_end":2708,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"Inner","qualname":"::InnerUser::Inner","value":"type Inner;","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Inner type.\n","sig":null,"attributes":[{"value":"/ Inner type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2678,"byte_end":2693,"line_start":95,"line_end":95,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2745,"byte_end":2750,"line_start":100,"line_end":100,"column_start":11,"column_end":16},"name":"Reset","qualname":"::Reset","value":"Reset","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" Resettable types.\n","sig":null,"attributes":[{"value":"/ Resettable types.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2713,"byte_end":2734,"line_start":99,"line_end":99,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2802,"byte_end":2807,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"reset","qualname":"::Reset::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Reset state to its initial value.\n","sig":null,"attributes":[{"value":"/ Reset state to its initial value.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2757,"byte_end":2794,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2914,"byte_end":2927,"line_start":106,"line_end":106,"column_start":11,"column_end":24},"name":"AlgorithmName","qualname":"::AlgorithmName","value":"AlgorithmName","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" Trait which stores algorithm name constant, used in `Debug` implementations.\n","sig":null,"attributes":[{"value":"/ Trait which stores algorithm name constant, used in `Debug` implementations.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2823,"byte_end":2903,"line_start":105,"line_end":105,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2976,"byte_end":2990,"line_start":108,"line_end":108,"column_start":8,"column_end":22},"name":"write_alg_name","qualname":"::AlgorithmName::write_alg_name","value":"pub fn write_alg_name(&mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Write algorithm name into `f`.\n","sig":null,"attributes":[{"value":"/ Write algorithm name into `f`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":2934,"byte_end":2968,"line_start":107,"line_end":107,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3093,"byte_end":3100,"line_start":112,"line_end":112,"column_start":11,"column_end":18},"name":"KeyInit","qualname":"::KeyInit","value":"KeyInit: KeySizeUser + Sized","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Types which can be initialized from key.\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3038,"byte_end":3082,"line_start":111,"line_end":111,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3177,"byte_end":3180,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyInit::new","value":"pub fn new(&Key<Self>) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Create new value from fixed size key.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed size key.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3128,"byte_end":3169,"line_start":113,"line_end":113,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3264,"byte_end":3278,"line_start":117,"line_end":117,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::KeyInit::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Create new value from variable size key.\n","sig":null,"attributes":[{"value":"/ Create new value from variable size key.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3212,"byte_end":3256,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3924,"byte_end":3933,"line_start":137,"line_end":137,"column_start":11,"column_end":20},"name":"KeyIvInit","qualname":"::KeyIvInit","value":"KeyIvInit: KeySizeUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" Types which can be initialized from key and initialization vector (nonce).\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key and initialization vector (nonce).","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3835,"byte_end":3913,"line_start":136,"line_end":136,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":4035,"byte_end":4038,"line_start":139,"line_end":139,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyIvInit::new","value":"pub fn new(&Key<Self>, &Iv<Self>) -> Self","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Create new value from fixed length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed length key and nonce.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3974,"byte_end":4027,"line_start":138,"line_end":138,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":4163,"byte_end":4178,"line_start":143,"line_end":143,"column_start":8,"column_end":23},"name":"new_from_slices","qualname":"::KeyIvInit::new_from_slices","value":"pub fn new_from_slices(&[u8], &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Create new value from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from variable length key and nonce.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":4085,"byte_end":4141,"line_start":141,"line_end":141,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":4146,"byte_end":4155,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5729,"byte_end":5738,"line_start":188,"line_end":188,"column_start":11,"column_end":20},"name":"InnerInit","qualname":"::InnerInit","value":"InnerInit: InnerUser + Sized","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" Types which can be initialized from another type (usually block ciphers).","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type (usually block ciphers).","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5577,"byte_end":5654,"line_start":185,"line_end":185,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5655,"byte_end":5658,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5659,"byte_end":5718,"line_start":187,"line_end":187,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5810,"byte_end":5820,"line_start":190,"line_end":190,"column_start":8,"column_end":18},"name":"inner_init","qualname":"::InnerInit::inner_init","value":"pub fn inner_init(Self::Inner) -> Self","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Initialize value from the `inner`.\n","sig":null,"attributes":[{"value":"/ Initialize value from the `inner`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5764,"byte_end":5802,"line_start":189,"line_end":189,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6028,"byte_end":6039,"line_start":197,"line_end":197,"column_start":11,"column_end":22},"name":"InnerIvInit","qualname":"::InnerIvInit","value":"InnerIvInit: InnerUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" Types which can be initialized from another type and additional initialization\n vector/nonce.","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type and additional initialization","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5853,"byte_end":5935,"line_start":193,"line_end":193,"column_start":1,"column_end":83}},{"value":"/ vector/nonce.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5936,"byte_end":5953,"line_start":194,"line_end":194,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5958,"byte_end":6017,"line_start":196,"line_end":196,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6136,"byte_end":6149,"line_start":199,"line_end":199,"column_start":8,"column_end":21},"name":"inner_iv_init","qualname":"::InnerIvInit::inner_iv_init","value":"pub fn inner_iv_init(Self::Inner, &Iv<Self>) -> Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` array.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` array.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6078,"byte_end":6128,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6257,"byte_end":6276,"line_start":202,"line_end":202,"column_start":8,"column_end":27},"name":"inner_iv_slice_init","qualname":"::InnerIvInit::inner_iv_slice_init","value":"pub fn inner_iv_slice_init(Self::Inner, &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` slice.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` slice.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6199,"byte_end":6249,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8609,"byte_end":8622,"line_start":290,"line_end":290,"column_start":12,"column_end":25},"name":"InvalidLength","qualname":"::InvalidLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when key and/or IV used in the [`KeyInit`],\n [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had\n an invalid length.\n","sig":null,"attributes":[{"value":"/ The error type returned when key and/or IV used in the [`KeyInit`],","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8395,"byte_end":8466,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/ [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8467,"byte_end":8529,"line_start":287,"line_end":287,"column_start":1,"column_end":63}},{"value":"/ an invalid length.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8530,"byte_end":8552,"line_start":288,"line_end":288,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6882,"byte_end":6883,"line_start":221,"line_end":221,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":7017,"byte_end":7018,"line_start":229,"line_end":229,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":7400,"byte_end":7401,"line_start":245,"line_end":245,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8647,"byte_end":8660,"line_start":292,"line_end":292,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8835,"byte_end":8848,"line_start":299,"line_end":299,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3102,"byte_end":3113,"line_start":112,"line_end":112,"column_start":20,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":44},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3116,"byte_end":3121,"line_start":112,"line_end":112,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3935,"byte_end":3946,"line_start":137,"line_end":137,"column_start":22,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":44},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3949,"byte_end":3959,"line_start":137,"line_end":137,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":3962,"byte_end":3967,"line_start":137,"line_end":137,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5740,"byte_end":5749,"line_start":188,"line_end":188,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":5752,"byte_end":5757,"line_start":188,"line_end":188,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6041,"byte_end":6050,"line_start":197,"line_end":197,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6053,"byte_end":6063,"line_start":197,"line_end":197,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6066,"byte_end":6071,"line_start":197,"line_end":197,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":6882,"byte_end":6883,"line_start":221,"line_end":221,"column_start":25,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":7017,"byte_end":7018,"line_start":229,"line_end":229,"column_start":23,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":7400,"byte_end":7401,"line_start":245,"line_end":245,"column_start":21,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8647,"byte_end":8660,"line_start":292,"line_end":292,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.5/src/lib.rs","byte_start":8835,"byte_end":8848,"line_start":299,"line_end":299,"column_start":28,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":4,"index":2546}}]}